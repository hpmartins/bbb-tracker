doctype html
html(lang="pt-BR")
    head
        meta(charset="utf-8")
        meta(http-equiv="X-UA-Compatible" content="IE=edge")
        meta(name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0")
        title Raio-X do BBB 24
        link(href="./styles/style.css" rel="stylesheet")
        link(href="./styles/extra.css" rel="stylesheet")
        script(src="https://code.jquery.com/jquery-3.7.1.min.js")
        script(src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js" integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r" crossorigin="anonymous")
        script(src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.min.js" integrity="sha384-BBtl+eGJRgqQAUMxJ7pMwbEyER4l1g+O15P+16Ep7Q9Q+zqX6gSbd85u4mG4QzX+" crossorigin="anonymous")
        script(src="https://d3js.org/d3.v4.js")
    body
        div(class="md:container md:mx-auto")
            .flex.flex-col.w-full.items-center.p-2

                block header
                    .divider.divider-primary
                    p.text-4xl.text-center.py-4 Coisas do BBB 24

                .divider.divider-primary
                .w-full
                    div(id="chart")

                    script(type='text/javascript').
                        var margin = {
                            left: 90,
                            top: 90,
                            right: 90,
                            bottom: 90
                        },
                        width = 1600 - margin.left - margin.right, // more flexibility: Math.min(window.innerWidth, 1000)
                        height = 1600 - margin.top - margin.bottom, // same: Math.min(window.innerWidth, 1000)
                        innerRadius = Math.min(width, height) * .39,
                        outerRadius = innerRadius * 1.1;

                        var names = !{JSON.stringify(names)};
                        var colors = !{JSON.stringify(colors)};
                        var opacityDefault = 0.8;
                        var matrix = !{JSON.stringify(matrix)};

                        ////////////////////////////////////////////////////////////
                        /////////// Create scale and layout functions //////////////
                        ////////////////////////////////////////////////////////////

                        var colors = d3.scaleOrdinal()
                        .domain(d3.range(names.length))
                        .range(colors);

                        var chord = d3.chord()
                        .padAngle(0.05)
                        .sortSubgroups(d3.descending)


                        //-     var res = d3.chord()
                        //-         .padAngle(0.05)
                        //-         .sortSubgroups(d3.descending)
                        //-         (matrix)

                        var arc = d3.arc()
                        .innerRadius(innerRadius * 1.01)
                        .outerRadius(outerRadius);

                        var path = d3.ribbon()
                        .radius(innerRadius);

                        ////////////////////////////////////////////////////////////
                        ////////////////////// Create SVG //////////////////////////
                        ////////////////////////////////////////////////////////////

                        var svg = d3.select("#chart").append("svg")
                        .attr("width", width + margin.left + margin.right)
                        .attr("height", height + margin.top + margin.bottom)
                        .append("g")
                        .attr("transform", "translate(" + (width / 2 + margin.left) + "," + (height / 2 + margin.top) + ")")
                        .datum(chord(matrix));

                        ////////////////////////////////////////////////////////////
                        ////////////////// Draw outer Arcs /////////////////////////
                        ////////////////////////////////////////////////////////////

                        var outerArcs = svg.selectAll("g.group")
                        .data(function(chords) {
                            return chords.groups;
                        })
                        .enter().append("g")
                        .attr("class", "group")
                        .on("mouseover", fade(.1))
                        .on("mouseout", fade(opacityDefault))

                        // text popups
                        .on("click", mouseoverChord)
                        .on("mouseout", mouseoutChord);

                        outerArcs.append("path")
                        .style("fill", function(d) {
                            return colors(d.index);
                        })
                        .attr("id", function(d, i) {
                            return "group" + d.index;
                        })
                        .attr("d", arc);

                        ////////////////////////////////////////////////////////////
                        ////////////////////// Append names ////////////////////////
                        ////////////////////////////////////////////////////////////

                        //Append the label names on the outside
                        outerArcs.append("text")
                        .each(function(d) {
                            d.angle = (d.startAngle + d.endAngle) / 2;
                        })
                        .attr("dy", ".35em")
                        .attr("class", "titles")
                        .attr("text-anchor", function(d) {
                            return d.angle > Math.PI ? "end" : null;
                        })
                        .attr("transform", function(d) {
                            return "rotate(" + (d.angle * 180 / Math.PI - 90) + ")" +
                            "translate(" + (outerRadius + 10) + ")" +
                            (d.angle > Math.PI ? "rotate(180)" : "");
                        })
                        .text(function(d, i) {
                            return names[i];
                        });

                        ////////////////////////////////////////////////////////////
                        ////////////////// Draw inner chords ///////////////////////
                        ////////////////////////////////////////////////////////////

                        svg.selectAll("path.chord")
                        .data(function(chords) {
                            return chords;
                        })
                        .enter().append("path")
                        .attr("class", "chord")
                        .style("fill", function(d) {
                            return colors(d.target.index);
                        })
                        .style("opacity", opacityDefault)
                        .attr("d", path);

                        ////////////////////////////////////////////////////////////
                        ////////////////// Extra Functions /////////////////////////
                        ////////////////////////////////////////////////////////////

                        function popup() {
                        return function(d, i) {
                            console.log("love");
                        };
                        } //popup

                        //Returns an event handler for fading a given chord group.
                        function fade(opacity) {
                        return function(d, i) {
                            svg.selectAll("path.chord")
                            .filter(function(d) {
                                return d.source.index != i && d.target.index != i;
                            })
                            .transition()
                            .style("opacity", opacity);
                        };
                        } //fade

                        //Highlight hovered over chord
                        function mouseoverChord(d, i) {

                        //Decrease opacity to all
                        svg.selectAll("path.chord")
                            .transition()
                            .style("opacity", 0.1);
                        //Show hovered over chord with full opacity
                        d3.select(this)
                            .transition()
                            .style("opacity", 1);

                        //Define and show the tooltip over the mouse location
                        $(this).popover({
                            //placement: 'auto top',
                            title: 'test',
                            placement: 'right',
                            container: 'body',
                            animation: false,
                            offset: "20px -100px",
                            followMouse: true,
                            trigger: 'click',
                            html: true,
                            content: function() {
                            return "<p style='font-size: 11px; text-align: center;'><span style='font-weight:900'>" +
                                "</span> text <span style='font-weight:900'>" +
                                "</span> folgt hier <span style='font-weight:900'>" + "</span> movies </p>";
                            }
                        });
                        $(this).popover('show');
                        }
                        //Bring all chords back to default opacity
                        function mouseoutChord(d) {
                        //Hide the tooltip
                        $('.popover').each(function() {
                            $(this).remove();
                        })
                        //Set opacity back to default for all
                        svg.selectAll("path.chord")
                            .transition()
                            .style("opacity", opacityDefault);
                        } //function mouseoutChord

                        //- var svg = d3.select("#dataviz")
                        //-     .append("svg")
                        //-     .attr("width", 800)
                        //-     .attr("height", 800)
                        //-     .append("g")
                        //-     .attr("transform", "translate(400,400)")

                        //-     var matrix = !{JSON.stringify(matrix)}

                        //-     // 4 groups, so create a vector of 4 colors
                        //-     var colors = !{JSON.stringify(colors)}

                        //-     // give this matrix to d3.chord(): it will calculates all the info we need to draw arc and ribbon
                        //-     var res = d3.chord()
                        //-         .padAngle(0.05)
                        //-         .sortSubgroups(d3.descending)
                        //-         (matrix)

                        //-     // add the groups on the outer part of the circle
                        //-     svg
                        //-         .datum(res)
                        //-         .append("g")
                        //-         .selectAll("g")
                        //-         .data(function(d) { return d.groups; })
                        //-         .enter()
                        //-         .append("g")
                        //-         .append("path")
                        //-             .style("fill", function(d,i){ return colors[i] })
                        //-             .style("stroke", "black")
                        //-             .attr("id", function(d, i) { return "group" + d.index; }) //add id here
                        //-             .attr("d", d3.arc()
                        //-                 .innerRadius(360)
                        //-                 .outerRadius(380)
                        //-             )
                        //-             .append("text")
                        //-                 .attr("x", 6)
                        //-                 .attr("dy", 15)
                        //-             .append("textPath")
                        //-                 .attr("xlink:href", function(d) { return "#group" + d.index; })
                        //-                 .text(function(chords, i){return names[i];})
                        //-                 .style("fill", "white");

                            // Add the links between groups
                            //- svg
                            //-     .datum(res)
                            //-     .append("g")
                            //-     .selectAll("path")
                            //-     .data(function(d) { return d; })
                            //-     .enter()
                            //-     .append("path")
                            //-         .attr("d", d3.ribbon()
                            //-             .radius(360)
                            //-         )
                            //-         .style("fill", function(d){ return(colors[d.source.index]) }) // colors depend on the source group. Change to target otherwise.
                            //-         .style("stroke", "black");

            div 
                p.text-center.pt-4 Esse site não é oficial e não tem ligação com a rede Globo ou o Big Brother Brasil.
