.divider.divider-primary

p.text-3xl.text-center.pb-4 Votos dados em paredões
.w-fit
    .overflow-x-auto
        table.table.table-zebra.table-xs.table-border
            thead.text-lg.text-center
                tr 
                    th.text-left(rowspan=2) pessoa
                    th(colspan=paredoes.lista.length) paredão
                tr 
                    each paredao in [...Array(paredoes.lista.length).keys()] 
                        th= `#${paredao+1}`
            tbody.text-lg.text-center
                each pFrom of all_participants 
                    - var nFrom = pFrom._id.nome 
                    tr 
                        td.text-left(class=`${pFrom.eliminado ? "grayscale" : ""}`)
                            .flex.items-center.space-x-3
                                .avatar
                                    .w-8.rounded
                                        img(src=pFrom.imagem loading="lazy" alt=pFrom.nomePopular)
                                p.text-lg= pFrom.nomePopular
                        each paredao of paredoes.lista 
                            - var votosFrom = votos.filter(x => x.paredao == paredao._id && x.from == nFrom)
                            td.space-x-2
                                each votoAnjo of paredao.anjo.filter(x => x.from == nFrom)
                                    if !votoAnjo.to.length
                                        - break
                                    - var anjoTo = all_participants.filter(x => x._id.nome == votoAnjo.to)[0]
                                    .avatar
                                        .w-8.rounded.ring.ring-info
                                            img(src=anjoTo.imagem loading="lazy" alt=anjoTo.nomePopular title=anjoTo.nomePopular)
                                each voto of votosFrom
                                    if !voto.to.length
                                        - break
                                    - var pTo = all_participants.filter(x => x._id.nome == voto.to)[0]
                                    - var nTo = pTo._id.nome
                                    .avatar
                                        if voto.extra
                                            if voto.extra.indicacao
                                                .w-8.rounded.ring.ring-error 
                                                    img(src=pTo.imagem loading="lazy" alt=pTo.nomePopular title=pTo.nomePopular)
                                            if voto.extra.veto
                                                .w-8.rounded.ring.ring-warning 
                                                    img(src=pTo.imagem loading="lazy" alt=pTo.nomePopular title=pTo.nomePopular)
                                            if voto.extra.minerva
                                                .w-8.rounded.ring.ring-success 
                                                    img(src=pTo.imagem loading="lazy" alt=pTo.nomePopular title=pTo.nomePopular)
                                            if voto.extra.contragolpe
                                                .w-8.rounded.ring.ring-accent 
                                                    img(src=pTo.imagem loading="lazy" alt=pTo.nomePopular title=pTo.nomePopular)
                                            if voto.extra.group_vote
                                                .w-8.rounded.ring.ring-primary 
                                                    img(src=pTo.imagem loading="lazy" alt=pTo.nomePopular title=pTo.nomePopular)
                                            if voto.extra.bigfone
                                                .w-8.rounded.ring.ring-primary 
                                                    img(src=pTo.imagem loading="lazy" alt=pTo.nomePopular title=pTo.nomePopular)
                                        else
                                            if paredao.resultado.includes(nTo)
                                                .w-8.rounded.ring.ring-error 
                                                    img(src=pTo.imagem loading="lazy" alt=pTo.nomePopular title=pTo.nomePopular)
                                            else
                                                .w-8.rounded
                                                    img(src=pTo.imagem loading="lazy" alt=pTo.nomePopular title=pTo.nomePopular)
    
    .grid.grid-cols-2.flex.justify-center.py-4.gap-4
        .flex.items-center
            .avatar
                .w-8.rounded.ring.ring-error 
            p.pl-2 indicação (votos/líder)
        .flex.items-center
            .avatar
                .w-8.rounded.ring.ring-info
            p.pl-2 imunidade
        .flex.items-center
            .avatar
                .w-8.rounded.ring.ring-success
            p.pl-2 desempate
        .flex.items-center
            .avatar
                .w-8.rounded.ring.ring-accent
            p.pl-2 contragolpe
        .flex.items-center
            .avatar
                .w-8.rounded.ring.ring-primary
            p.pl-2 em grupo
        .flex.items-center
            .avatar
                .w-8.rounded.ring.ring-primary
            p.pl-2 big fone

.divider.divider-primary

p.text-3xl.text-center Votos recebidos em paredões
p.text-2xl.text-center.py-4 Clique no número de votos para ver mais informações
.w-fit
    .overflow-x-auto
        table.table.table-zebra.table-xs.table-border
            thead.text-lg.text-center
                tr 
                    th.text-left(rowspan=2) pessoa
                    th(colspan=paredoes.lista.length) paredão
                tr 
                    each paredao in [...Array(paredoes.lista.length).keys()] 
                        th= `#${paredao+1}`
            tbody.text-lg.text-center
                each pTo, iTo in all_participants 
                    - var nTo = pTo._id.nome
                    tr
                        td.text-left(class=`${pTo.eliminado ? "grayscale" : ""}`)
                            .flex.items-center.space-x-3
                                .avatar
                                    .w-8.rounded
                                        img(src=pTo.imagem loading="lazy" alt=pTo.nomePopular title=pTo.nomePopular)
                                p.text-lg= pTo.nomePopular
                        each paredao, iParedao in paredoes.lista
                            - var votosTo = votos.filter(x => x.paredao == paredao._id && x.to == nTo)
                            - var votosNormais = votosTo.filter(x => !x.extra)
                            - var votosEspeciais = votosTo.filter(x => x.extra)
                            td.text-lg.text-center.space-x-2
                                if paredao.anjo.filter(x => x.from == nTo && x.autoimune).length
                                    .badge.badge-info I
                                if paredao.anjo.filter(x => x.to == nTo).length
                                    .badge.badge-info.badge-outline I
                                if votosNormais.length > 0
                                    - var modalId = `paredao_votos_${iParedao}_${iTo}`
                                    if paredao.resultado.includes(nTo)
                                        .badge.badge-error(onclick=`${modalId}.showModal()`)= votosNormais.length
                                    else
                                        .badge.badge-neutral(onclick=`${modalId}.showModal()`)= votosNormais.length
                                    dialog(id=modalId class="modal modal-bottom sm:modal-middle")
                                        .modal-box.justify-center
                                            p.text-xl
                                            | Votos recebidos de 
                                            span.font-bold= pTo.nomePopular
                                            |  no paredão 
                                            span.font-bold ##{paredao._id}

                                            .flex.justify-center.pt-5
                                                .overflow-x-auto
                                                    table.table.table-zebra.table-xs
                                                        thead.text-center
                                                            tr
                                                                th.text-xl pessoa
                                                        tbody.text-center
                                                            for voto in votosNormais
                                                                - var pFrom = all_participants.filter(x => x._id.nome == voto.from)[0]
                                                                tr
                                                                    td.text-xl= pFrom.nomePopular
                                            .modal-action 
                                                form(method="dialog")
                                                    button.btn fechar
                                        form.modal-backdrop(method="dialog")
                                            button
                                if votosEspeciais.length > 0
                                    - var votosIndicacao = votosEspeciais.filter(x => x.extra.indicacao)
                                    - var votosVetos = votosEspeciais.filter(x => x.extra.veto)
                                    - var votosMinerva = votosEspeciais.filter(x => x.extra.minerva)
                                    - var votosContragolpe = votosEspeciais.filter(x => x.extra.contragolpe)
                                    - var votosGroupVote = votosEspeciais.filter(x => x.extra.group_vote)
                                    - var votosBigFone = votosEspeciais.filter(x => x.extra.bigfone)
                                    if votosIndicacao.length > 0
                                        .badge.badge-error L
                                    if votosVetos.length > 0
                                        .badge.badge-warning V
                                    if votosMinerva.length > 0
                                        .badge.badge-error.badge-outline M
                                    if votosContragolpe.length > 0
                                        .badge.badge-accent.badge-outline C
                                    if votosGroupVote.length > 0
                                        .badge.badge-primary.badge-outline G
                                    if votosBigFone.length > 0
                                        .badge.badge-primary F

    .grid.grid-cols-2.flex.justify-center.py-4
        .flex.items-center
            .badge.badge-neutral N 
            p.pl-2 normais
        .flex.items-center
            .badge.badge-error X/L
            p.pl-2 indicação (votos/líder)
        .flex.items-center
            .badge.badge-info I
            p.pl-2 autoimune
        .flex.items-center
            .badge.badge-info.badge-outline I
            p.pl-2 imune
        .flex.items-center
            .badge.badge-warning V
            p.pl-2 veto
        .flex.items-center
            .badge.badge-success.badge-outline M
            p.pl-2 desempate
        .flex.items-center
            .badge.badge-accent.badge-outline C
            p.pl-2 contragolpe
        .flex.items-center
            .badge.badge-primary.badge-outline G
            p.pl-2 em grupo
        .flex.items-center
            .badge.badge-primary F
            p.pl-2 big fone